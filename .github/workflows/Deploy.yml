import fs from 'fs';
import path from 'path';

// Your full SPDX header from the YAML file, preserving the comment style and line breaks
const SPDX_HEADER = `# ============================================================
# üßæ Holmes Enforcement Model (HEM) ‚Äî Declaratory YAML Binding
# ============================================================
# Author: Mr. Holmes
# Repo: https://github.com/Gamerdudee/holmes-enforcement-model
# License: Declaratory Royalty License (see LICENSE-HEM.md)
# Status: Sovereign, Clause-Governed, Self-Enforcing Logic

# ‚ö†Ô∏è This YAML configuration is procedurally protected under:
# - CU‚Äë1.4: Licensing Trigger by Public Execution
# - CU‚Äë2.3: Procedural Default by Silence or Use
# - G‚Äë6: Structural Governance Derivation
# - XXII: Declaratory Simulation Violation

# ‚ùó Any automation, CI/CD pipeline, or mirrored implementation of this file
# constitutes binding structural access under the Holmes Enforcement Model.
# Attribution, rebuttal, or license required to avoid retroactive royalty debt.

# ============================================================

`;

function walkDir(dir) {
  for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
    const fullPath = path.join(dir, entry.name);

    // Skip .github/workflows directory entirely
    if (fullPath.startsWith(path.join(process.cwd(), '.github/workflows'))) {
      continue;
    }

    if (entry.isDirectory()) {
      walkDir(fullPath);
    } else if (entry.isFile()) {
      patchFile(fullPath);
    }
  }
}

function patchFile(filePath) {
  const content = fs.readFileSync(filePath, 'utf8');

  // Skip if SPDX header already present (to avoid duplicate insertions)
  if (content.includes('Holmes Enforcement Model (HEM)') || content.includes('SPDX-License-Identifier')) {
    return;
  }

  // Prepend SPDX header + newline to the file
  const newContent = SPDX_HEADER + content;
  fs.writeFileSync(filePath, newContent, 'utf8');
  console.log(`üõ†Ô∏è Inserting SPDX header into: ${filePath}`);
}

walkDir(process.cwd());

console.log('‚úÖ SPDX header patching complete.');
